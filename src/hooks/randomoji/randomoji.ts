import { Client } from 'discord.js';

import { Hook } from '../../hook';

const list = [
  '⌚',
  '☝',
  '⚪',
  '⚽',
  '⛄',
  '✊',
  '✌',
  '🌀',
  '🌡',
  '🌤',
  '🌭',
  '🌰',
  '🌶',
  '🌷',
  '🍽',
  '🍾',
  '🎀',
  '🎠',
  '🏅',
  '🏆',
  '🏋',
  '🏠',
  '🏸',
  '🐀',
  '👀',
  '👁',
  '👂',
  '🕐',
  '🕯',
  '🕳',
  '🕺',
  '🖐',
  '🖕',
  '🗻',
  '😀',
  '😁',
  '😑',
  '😒',
  '😕',
  '😖',
  '😗',
  '😘',
  '😙',
  '😚',
  '😛',
  '😜',
  '😟',
  '😠',
  '😦',
  '😨',
  '😬',
  '😭',
  '😮',
  '😰',
  '😴',
  '😵',
  '🙁',
  '🙃',
  '🙅',
  '🚀',
  '🛋',
  '🛐',
  '🛑',
  '🛠',
  '🛩',
  '🛫',
  '🛰',
  '🛳',
  '🛴',
  '🤐',
  '🤙',
  '🤠',
  '🤰',
  '🤳',
  '🤼',
  '🥀',
  '🥇',
  '🥐',
  '🦀',
  '🦅',
  '🧀',
  '⌚',
  '⏰',
  '⏳',
  '◽',
  '☔',
  '⚓',
  '⚡',
  '⚪',
  '⚽',
  '⛄',
  '⛔',
  '⛪',
  '⛲',
  '⛵',
  '✊',
  '🌀',
  '🌭',
  '🌰',
  '🌷',
  '🍾',
  '🎀',
  '🎠',
  '🏅',
  '🏆',
  '🏏',
  '🏠',
  '🏴',
  '🏸',
  '🐀',
  '👀',
  '👂',
  '📸',
  '📹',
  '🔀',
  '🕐',
  '🕺',
  '🖕',
  '🖤',
  '🗻',
  '😀',
  '😁',
  '😑',
  '😒',
  '😕',
  '😖',
  '😗',
  '😘',
  '😙',
  '😚',
  '😛',
  '😜',
  '😟',
  '😠',
  '😦',
  '😨',
  '😬',
  '😭',
  '😮',
  '😰',
  '😴',
  '😵',
  '🙁',
  '🙃',
  '🙅',
  '🚀',
  '🛌',
  '🛐',
  '🛑',
  '🛫',
  '🛴',
  '🤐',
  '🤙',
  '🤠',
  '🤰',
  '🤳',
  '🤼',
  '🥀',
  '🥇',
  '🥐',
  '🦀',
  '🦅',
  '🧀',
  '☝',
  '⛹',
  '✊',
  '✌',
  '🎅',
  '🏃',
  '🏊',
  '🏋',
  '👂',
  '👆',
  '👦',
  '👮',
  '👰',
  '👼',
  '💁',
  '💅',
  '💪',
  '🕵',
  '🕺',
  '🖐',
  '🖕',
  '🙅',
  '🙋',
  '🚣',
  '🚴',
  '🛀',
  '🤘',
  '🤙',
  '🤦',
  '🤰',
  '🤳',
  '🤼',
];

export class RandomojiHook extends Hook {

  constructor(client: Client) {
    super(client);
  }

  public init() {
    this.client.on('message', (message) => {
      const chance = 1 / 74;
      if (Math.random() < chance) {
        const randomIndex = Math.floor(Math.random() * list.length);
        const emoji = list[randomIndex];

        if (emoji && message.author.bot === false) {
          message.react(emoji);
        }
      }

    });
  }

}

