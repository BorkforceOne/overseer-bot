version: 2.1
orbs:
  docker-buildx: sensu/docker-buildx@1.1.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: bjg96/overseer-bot
      QEMU_VERSION: 5.2.0-2
      BUILDX_VERSION: 0.6.1
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
              mkdir -p ~/.docker/cli-plugins
              baseUrl="https://github.com/docker/buildx/releases/download"
              fileName="buildx-v$BUILDX_VERSION.linux-amd64"
              url="${baseUrl}/v$BUILDX_VERSION/${fileName}"
              curl -sSL -o ~/.docker/cli-plugins/docker-buildx $url
              chmod a+x ~/.docker/cli-plugins/docker-buildx
          name: Install Docker buildx
      - run:
          command: echo 'export DOCKER_CLI_EXPERIMENTAL="enabled"' >> $BASH_ENV
          name: Enable experimental Docker features
      - run:
          command: docker buildx install
          name: Initialize Docker buildx
      - run:
          command: |
              docker run --rm --privileged multiarch/qemu-user-static:$QEMU_VERSION --reset -p yes
          name: Start multiarch/qemu-user-static container
      - run:
          command: docker rm -f buildx_buildkit_docker-multiarch0 || true
          name: Remove buildx multiarch container in case it exists
      - run:
          command: |
              docker buildx create --name docker-multiarch --platform linux/386,linux/amd64,linux/arm/v5,linux/arm/v6,linux/arm/v7,linux/arm64,linux/mips64le,linux/ppc64le,linux/riscv64,linux/s390x
          name: Create docker-multiarch builder
      - run:
          command: docker buildx inspect --builder docker-multiarch --bootstrap
          name: Inspect & bootstrap docker-multiarch builder
      - run:
          command: docker buildx use docker-multiarch
          name: Set docker-multiarch as default builder
      - run:
          name: Build Docker image
          command: |
            docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - circleci-editor/master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - circleci-editor/master
